{"title":"Highcharter Drilldown on Neuropsychological Domains and Test Scores","markdown":{"yaml":{"title":"Highcharter Drilldown on Neuropsychological Domains and Test Scores","subtitle":"Subtitle","summary":"Summary","authors":["Joey Trampush"],"patient":"Biggie","date":"2022-04-05","slug":"highcharter-drilldown-neurocognitive-domains","categories":["R","highcharter"],"tags":["ggplot2","R","R Markdown"],"lastmod":"2022-04-05T13:50:26-07:00","featured":"yes","draft":"no","projects":[],"output":{"blogdown::html_page":{"toc":false,"fig_width":12,"fig_height":8,"fig_retina":3,"dev":"svg"}},"rmd_hash":"ad12fe1c1b68566d"},"headingText":"load libraries","containsRefs":false,"markdown":"\n\n```{r patient, include=FALSE}\npatient <- \"Biggie\"\n```\n\n```{r setup, include=FALSE}\nlibrary(here)\nlibrary(knitr)\nlibrary(xaringan)\nlibrary(xaringanExtra)\nlibrary(xaringanthemer)\nlibrary(rmarkdown)\nlibrary(revealjs)\nlibrary(reactable)\nlibrary(tidyverse)\nlibrary(highcharter)\nlibrary(htmlwidgets)\nlibrary(widgetframe)\nlibrary(crosstalk)\nlibrary(manipulateWidget)\nlibrary(tibble)\nlibrary(svglite)\nlibrary(gifski)\nlibrary(bwu)\n## knitr options\noptions(htmltools.dir.version = FALSE)\nknitr::opts_chunk$set(\n  fig.path = \"figs/\",\n  fig.width = 12,\n  fig.height = 8,\n  fig.asp = .5,\n  fig.retina = 3,\n  out.width = \"100%\",\n  fig.showtext = TRUE,\n  comment = NULL,\n  cache = FALSE,\n  cache.path = \"cache/\",\n  echo = FALSE,\n  message = FALSE,\n  warning = FALSE,\n  dev = c(\"svg\", \"svglite\"),\n  hiline = TRUE\n)\nknitr::opts_chunk$set(collapse = TRUE, class.source = c(\"aside\", \"img\", \".drilld\", \"rect\"))\n```\n\n## Neuropsychological Testing Results\n\n```{r, read-data}\nneurocog <-\n  readr::read_csv(here::here(\"static\", \"data\", \"neurocog.csv\"), show_col_types = FALSE)\n```\n\n```{css, echo=FALSE}\naside {\n  margin-left: 100%;\n  position: absolute;\n}\n```\n\n```{css, echo=FALSE}\nimg {\n  width: 200vw;\n  margin-left: calc(50% - 50vw);\n}\n```\n\n```{css, echo=FALSE}\nrect[Attributes Style] {\n    fill: transparent;\n    x: 0;\n    y: 0;\n    width: 1200;\n    height: 800;\n    rx: 0;\n    ry: 0;\n}\n```\n\n```{css, echo=FALSE}\n.drilld {\n  width: 300vw;\n  margin-left: calc(50% - 50vw);\n}\n```\n\n```{r drilldown-level1}\n## Level 1\n## Domain scores\n# 1. create mean z-scores for domain\nncog1 <- neurocog %>%\n  dplyr::group_by(domain) %>%\n  dplyr::summarize(\n    zMean = mean(z),\n    zPct = mean(percentile)\n  ) %>%\n  dplyr::mutate(range = NA)\nncog1$zMean <- round(ncog1$zMean, 2L)\nncog1$zPct <- round(ncog1$zPct, 0L)\nncog1 <-\n  ncog1 %>%\n  dplyr::mutate(\n    range = dplyr::case_when(\n      zPct >= 98 ~ \"Exceptionally High\",\n      zPct %in% 91:97 ~ \"Above Average\",\n      zPct %in% 75:90 ~ \"High-Average\",\n      zPct %in% 25:74 ~ \"Average\",\n      zPct %in% 9:24 ~ \"Low-Average\",\n      zPct %in% 2:8 ~ \"Below Average\",\n      zPct < 2 ~ \"Exceptionally Low\",\n      TRUE ~ as.character(range)\n    )\n  )\n\n# 2. sort hi to lo\nncog1 <- arrange(ncog1, desc(zMean))\n\n# 3. create tibble with new column with domain name lowercase\nncog_level1_status <- tibble(\n  name = ncog1$domain,\n  y = ncog1$zMean,\n  y2 = ncog1$zPct,\n  range = ncog1$range,\n  drilldown = tolower(name)\n)\n```\n\n```{r drilldown-level2}\n## Level 2\n## Subdomain scores\n## function to create second level of drilldown (subdomain scores)\nncog_level2_drill <-\n  lapply(unique(neurocog$domain), function(x_level) {\n    ncog2 <- subset(neurocog, neurocog$domain %in% x_level)\n\n    # same as above\n    ncog2 <-\n      ncog2 %>%\n      group_by(subdomain) %>%\n      summarize(\n        zMean = mean(z),\n        zPct = mean(percentile)\n      ) %>%\n      mutate(range = NA)\n\n    # round z-score to 1 decimal\n    ncog2$zMean <- round(ncog2$zMean, 2L)\n    ncog2$zPct <- round(ncog2$zPct, 0L)\n    ncog2 <-\n      ncog2 %>%\n      dplyr::mutate(\n        range = dplyr::case_when(\n          zPct >= 98 ~ \"Exceptionally High\",\n          zPct %in% 91:97 ~ \"Above Average\",\n          zPct %in% 75:90 ~ \"High-Average\",\n          zPct %in% 25:74 ~ \"Average\",\n          zPct %in% 9:24 ~ \"Low-Average\",\n          zPct %in% 2:8 ~ \"Below Average\",\n          zPct < 2 ~ \"Exceptionally Low\",\n          TRUE ~ as.character(range)\n        )\n      )\n\n    # 2. sort hi to lo\n    ncog2 <- arrange(ncog2, desc(zMean))\n\n    # 3. create tibble with new column with domain name lowercase\n    ncog_level2_status <- tibble(\n      name = ncog2$subdomain,\n      y = ncog2$zMean,\n      y2 = ncog2$zPct,\n      range = ncog2$range,\n      drilldown = tolower(paste(x_level, name, sep = \"_\"))\n    )\n\n    list(\n      id = tolower(x_level),\n      type = \"column\",\n      data = list_parse(ncog_level2_status)\n    )\n  })\n```\n\n```{r drilldown-level3}\n## Level 3\n## Narrow subdomains\n## reuse function\nncog_level3_drill <-\n  lapply(unique(neurocog$domain), function(x_level) {\n    ncog2 <- subset(neurocog, neurocog$domain %in% x_level)\n\n    # reuse function but with y_level\n    lapply(unique(ncog2$subdomain), function(y_level) {\n      # 1. create mean z-scores for subdomain\n      # ncog3 becomes pronoun for domain\n      ncog3 <- subset(ncog2, ncog2$subdomain %in% y_level)\n\n      ncog3 <- ncog3 %>%\n        group_by(narrow) %>%\n        summarize(zMean = mean(z), zPct = mean(percentile)) %>%\n        mutate(range = NA)\n\n      # round z-score to 1 decimal\n      ncog3$zMean <- round(ncog3$zMean, 2L)\n      ncog3$zPct <- round(ncog3$zPct, 0L)\n      ncog3 <-\n        ncog3 %>%\n        dplyr::mutate(\n          range = dplyr::case_when(\n            zPct >= 98 ~ \"Exceptionally High\",\n            zPct %in% 91:97 ~ \"Above Average\",\n            zPct %in% 75:90 ~ \"High-Average\",\n            zPct %in% 25:74 ~ \"Average\",\n            zPct %in% 9:24 ~ \"Low-Average\",\n            zPct %in% 2:8 ~ \"Below Average\",\n            zPct < 2 ~ \"Exceptionally Low\",\n            TRUE ~ as.character(range)\n          )\n        )\n\n      ncog3 <- arrange(ncog3, desc(zMean))\n\n      ncog_level3_status <- tibble(\n        name = ncog3$narrow,\n        y = ncog3$zMean,\n        y2 = ncog3$zPct,\n        range = ncog3$range,\n        drilldown = tolower(paste(x_level, y_level, name, sep = \"_\"))\n      )\n\n      list(\n        id = tolower(paste(x_level, y_level, sep = \"_\")),\n        type = \"column\",\n        data = list_parse(ncog_level3_status)\n      )\n    })\n  }) %>% unlist(recursive = FALSE)\n```\n\n```{r drilldown-level4}\n## Level 4\n## Scale scores\n## reuse both functions\nncog_level4_drill <-\n  lapply(unique(neurocog$domain), function(x_level) {\n    ncog2 <- subset(neurocog, neurocog$domain %in% x_level)\n\n    lapply(unique(ncog2$subdomain), function(y_level) {\n      ncog3 <- subset(ncog2, ncog2$subdomain %in% y_level)\n\n      lapply(unique(ncog3$narrow), function(z_level) {\n        ncog4 <- subset(ncog3, ncog3$narrow %in% z_level)\n\n        ncog4 <-\n          ncog4 %>%\n          group_by(scale) %>%\n          summarize(\n            zMean = mean(z),\n            zPct = mean(percentile)\n          ) %>%\n          mutate(range = NA)\n\n        # round z-score to 1 decimal\n        ncog4$zMean <- round(ncog4$zMean, 2L)\n        ncog4$zPct <- round(ncog4$zPct, 0L)\n        ncog4 <-\n          ncog4 %>%\n          dplyr::mutate(\n            range = dplyr::case_when(\n              zPct >= 98 ~ \"Exceptionally High\",\n              zPct %in% 91:97 ~ \"Above Average\",\n              zPct %in% 75:90 ~ \"High-Average\",\n              zPct %in% 25:74 ~ \"Average\",\n              zPct %in% 9:24 ~ \"Low-Average\",\n              zPct %in% 2:8 ~ \"Below Average\",\n              zPct < 2 ~ \"Exceptionally Low\",\n              TRUE ~ as.character(range)\n            )\n          )\n\n        ncog4 <- arrange(ncog4, desc(zMean))\n\n        ncog_level4_status <- tibble(\n          name = ncog4$scale,\n          y = ncog4$zMean,\n          y2 = ncog4$zPct,\n          range = ncog4$range\n        )\n\n        list(\n          id = tolower(paste(x_level, y_level, z_level, sep = \"_\")),\n          type = \"column\",\n          data = list_parse(ncog_level4_status)\n        )\n      })\n    }) %>% unlist(recursive = FALSE)\n  }) %>% unlist(recursive = FALSE)\n```\n\n```{r}\nthm_merge <- hc_theme_merge(\n  hc_theme_monokai(),\n  hc_theme_darkunica()\n)\n```\n\n```{r drilldown-plot, fig.cap='HighchartR Drilldown', fig.width=12, fig.height=8, fig.retina=3, out.width = \"100%\"}\n# Tooltip\nx <- c(\"Name\", \"Score\", \"Percentile\", \"Range\")\ny <- c(\"{point.name}\", \"{point.y}\", \"{point.y2}\", \"{point.range}\")\ntt <- tooltip_table(x, y)\n\n## Create drilldown bar plot zscores\nplot1 <-\n  highchart() %>%\n  hc_title(\n    text = patient,\n    style = list(\n      fontSize = \"15px\"\n    )\n  ) %>%\n  hc_add_series(\n    ncog_level1_status,\n    type = \"bar\",\n    name = \"Neuropsychological Test Scores\",\n    hcaes(x = name, y = y)\n  ) %>%\n  hc_xAxis(\n    type = \"category\",\n    title = list(\n      text = \"Domain\"\n    ),\n    categories = .$name\n  ) %>%\n  hc_yAxis(\n    title = list(\n      text = \"Z-Score (M = 0, SD = 1)\"\n    ),\n    labels = list(\n      format = \"{value}\"\n    )\n  ) %>%\n  hc_tooltip(\n    pointFormat = tt,\n    useHTML = TRUE,\n    valueDecimals = 1\n  ) %>%\n  hc_plotOptions(\n    series = list(\n      colorByPoint = TRUE,\n      allowPointSelect = TRUE,\n      dataLabels = TRUE\n    )\n  ) %>%\n  hc_drilldown(\n    allowPointDrilldown = TRUE,\n    series = c(\n      ncog_level2_drill,\n      ncog_level3_drill,\n      ncog_level4_drill\n    )\n  ) %>%\n  hc_colorAxis(\n    minColor = \"red\",\n    maxColor = \"blue\"\n  ) %>%\n  hc_add_theme(\n    thm_merge\n  ) %>%\n  hc_chart(\n    style = list(\n      fontFamily = \"Cabin\"\n    ),\n    backgroundColor = list(\"gray\")\n  )\nframeWidget(plot1)\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"blogdown::html_page":{"toc":false,"fig_width":12,"fig_height":8,"fig_retina":3,"dev":"svg"}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.215","theme":"cosmo","title":"Highcharter Drilldown on Neuropsychological Domains and Test Scores","subtitle":"Subtitle","summary":"Summary","authors":["Joey Trampush"],"patient":"Biggie","date":"2022-04-05","slug":"highcharter-drilldown-neurocognitive-domains","categories":["R","highcharter"],"tags":["ggplot2","R","R Markdown"],"lastmod":"2022-04-05T13:50:26-07:00","featured":"yes","draft":"no","projects":[],"rmd_hash":"ad12fe1c1b68566d"},"extensions":{"book":{"multiFile":true}}}}}